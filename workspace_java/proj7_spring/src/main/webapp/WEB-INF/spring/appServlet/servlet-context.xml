<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!--  -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--
	mapping : ulr패턴/ 
	location : resources :: webapp폴더 아래의 resources (실제위치)
	mapping에 해당하는 주소는 서블릿등을 안 찾고 바로 location으로 간다
	그 시간을 줄여주는 역할 (빠르게 찾기위해 사용함)
	 -->
	<!-- /resources/ : webapp 안에 있는 resources를 뜻함  -->
	<resources mapping="/resources/**" location="/resources/" /><!-- /resources/** : ** 뭐가 오든지 상관없다 -->
    <!--                  주소                      웹앱을 뜻함      -->
    <!-- webapp 폴더 안에 resources 폴더에 이미지를 넣어두면 됨 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
		<beans:bean> : spring에서의 재료로 되는것은 new할 수 있는 class  자바에서 bean은 재료가 되는것 : class
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 
		context:component-scan : kr.or.human패키지 안에 있어야 찾을 수 있다
		DispatcherServlet의 설정 파일 
	 -->
	<context:component-scan base-package="kr.or.human" />
	
	
	
</beans:beans>
